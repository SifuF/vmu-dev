
       .include "sfr.i"

       .org    0
       jmpf    start

       .org    $3
       jmp     nop_irq

       .org    $b
       jmp     nop_irq

       .org    $13
       jmp     nop_irq

       .org    $1b
       jmp     t1int

       .org    $23
       jmp     nop_irq

       .org    $2b
       jmp     nop_irq

       .org    $33
       jmp     nop_irq

       .org    $3b
       jmp     nop_irq

       .org    $43
       jmp     nop_irq

       .org    $4b
       clr1    p3int,0
       clr1    p3int,1

nop_irq:
       reti

       .org    $130
t1int:
       push    ie
       clr1    ie,7
       not1    ext,0
       jmpf    t1int
       pop     ie
       reti

       .org    $1f0
goodbye:
       not1    ext,0
       jmpf    goodbye

       .org    $200

       .byte   "Space Snake     "; 16 bytes
       .byte   "Written by SifuF                "; 32 bytes

       .org    $240

       .word   1
       .word   10


       .org    $260

       .word   $f000, $ff00, $f0f0, $f00f, $fff0, $faff, $ff1f, $ffff

       .word   $ffff, $ffff, $ffff, $ffff, $ffff, $ffff, $ffff, $ffff


       .org    $280

       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
       .byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44

start:
       mov #$a1,ocr
       mov #$09,mcr
       mov #$80,vccr
       clr1 p3int,0

       clr1 p1,7
       mov #$ff,p3

       call clrscr

       mov #<image_data,trl
       mov #>image_data,trh

       call setscr

.keypress:
       call getkeys
       bn acc,4,.keypress
       bn acc,5,.keypress

       br .keypress


clrscr:
       clr1 ocr,5

       push acc
       push xbnk
       push 2

       mov #0,xbnk
.cbank:
       mov #$80,2
.cloop:
       mov #0,@R2

       inc 2

       ld 2
       and #$f
       bne #$c,.cskip

       ld 2
       add #4
       st 2
.cskip:
       ld 2
       bnz .cloop

       bp xbnk,0,.cexit

       mov #1,xbnk
       br .cbank
.cexit:
       pop 2
       pop xbnk
       pop acc
       set1 ocr,5
       ret


setscr:
       clr1 ocr,5
       push acc
       push xbnk
       ;
       push c
       push 2
       mov #$80,2
       ;
       xor acc
       st xbnk
       st c
.sloop:
       ldc
       st @R2
       ;
       inc 2
       ;
       ld 2
       and #$f
       bne #$c,.sskip
       ;
       ld 2
       add #4
       st 2
       ;
       bnz .sskip
       ;
       inc xbnk
       mov #$80,2
.sskip:
       inc c
       ld c
       bne #$c0,.sloop
       ;
       pop 2
       pop c
       pop xbnk
       pop acc
       set1 ocr,5
       ret

image_data:
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %01111111,%11111111,%11111111,%11111111,%11111111,%11111110
       .byte %01000000,%00000000,%00000000,%00000000,%00000000,%00000010
       .byte %01000000,%00000000,%00000000,%00000000,%00000000,%00000010
       .byte %01000000,%00000000,%00000000,%00000000,%00000000,%00000010
       .byte %01011111,%10001010,%00111111,%00101001,%01000001,%11111010
       .byte %01010000,%00001010,%00100000,%00101001,%01000001,%00000010
       .byte %01010111,%10001010,%00101111,%00101001,%01000001,%01111010
       .byte %01010100,%00001010,%00101000,%00101001,%01000001,%01000010
       .byte %01010111,%10001010,%00101110,%00101001,%01000001,%01110010
       .byte %01010000,%10001010,%00100000,%00101001,%01001001,%00000010
       .byte %01011110,%10001010,%00101110,%00101001,%01000001,%01110010
       .byte %01000010,%10001010,%00101000,%00101001,%01000001,%01000010
       .byte %01011110,%10001010,%00101000,%00101111,%01000001,%01000010
       .byte %01000000,%10001010,%00101000,%00100000,%01000001,%01000010
       .byte %01011111,%10001010,%00101000,%00111111,%11000001,%01000010
       .byte %01000000,%00000000,%00000000,%00000000,%00000000,%00000010
       .byte %01000000,%00000000,%00000000,%00000000,%00000000,%00000010
       .byte %01000000,%00000000,%00000000,%00000000,%00000000,%00000010
       .byte %01111111,%11111111,%11111111,%11111111,%11111111,%11111110
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000
       .byte %00000000,%00000000,%00000000,%00000000,%00000000,%00000000

getkeys:
       bp p7,0,quit
       ld p3
       bn acc,6,quit
       bn acc,7,sleep
       ret
quit:
       jmp goodbye 

sleep:
       set1 pcon,0
       bn p3,7,sleep
       mov #0,vccr

sleepmore:
       set1 pcon,0
       bp p7,0,quit
       bp p3,7,sleepmore
       mov #$80,vccr

waitsleepup:
       set1 pcon,0
       bn p3,7,waitsleepup
       br getkeys

       .cnop   0,$200

